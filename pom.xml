<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.fugerit.java.demo</groupId>
	<artifactId>springboot-photobook</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springboot-photobook</name>
	<description>Spring Boot Demo Photobook</description>
	
	<properties>
		<java.version>17</java.version>
		<fj-version>8.0.5</fj-version>
		<!-- front end runtime -->
		<src.react>src/main/react</src.react>
		<npm.build.script>build</npm.build.script>
		<fe.dist.dir>src/main/resources/static/home</fe.dist.dir>
		<exec-plugin.version>3.1.0</exec-plugin.version>
		<antrun-plugin.version>3.1.0</antrun-plugin.version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.fugerit.java</groupId>
			<artifactId>fj-core</artifactId>
			<version>${fj-version}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
			    <groupId>org.graalvm.buildtools</groupId>
			    <artifactId>native-maven-plugin</artifactId>
			</plugin>		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		
		<profile>

			<id>buildreact</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-plugin.version}</version>
						<executions>
							<!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Default Lifecycle' -->
							<execution>
								<id>npm install (initialize)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>--legacy-peer-deps</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>
							<!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Clean Lifecycle' -->
							<execution>
								<id>npm install (clean)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>pre-clean</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>--legacy-peer-deps</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>

							<!-- Required: This following calls `npm run build` where 'build' is
                         the script name I used in my project, change this if yours is
                             different -->
							<execution>
								<id>npm run build (compile)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>${npm.build.script}</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>

						</executions>

					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>copy front end</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete dir="${fe.dist.dir}" />
										<mkdir dir="${fe.dist.dir}" />
										<copy todir="${fe.dist.dir}">
											<fileset dir="${src.react}/build">
												<include name="**/*.*" />
											</fileset>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>
		
	</profiles>

</project>
